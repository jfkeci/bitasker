generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model comments {
  id        Int       @id @unique(map: "id_UNIQUE") @default(autoincrement()) @db.UnsignedInt
  createdBy Int       @db.UnsignedInt
  createdAt DateTime? @default(now()) @db.DateTime(0)
  updatedAt DateTime? @default(now()) @db.DateTime(0)
  text      String    @db.VarChar(510)
  users     users     @relation(fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user-comment")

  @@index([createdBy], map: "user-comment_idx")
}

model tasks {
  id          Int       @id @unique(map: "id_UNIQUE") @default(autoincrement()) @db.UnsignedInt
  createdBy   Int       @db.UnsignedInt
  createdAt   DateTime  @default(now()) @db.DateTime(0)
  updatedAt   DateTime  @default(now()) @db.DateTime(0)
  title       String    @db.VarChar(255)
  description String?   @db.VarChar(510)
  tags        Json?
  parent      Int?      @unique(map: "parent_UNIQUE") @db.UnsignedInt
  due         DateTime? @db.DateTime(0)
  users       users     @relation(fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user-task")
  tasks       tasks?    @relation("tasksTotasks_parent", fields: [parent], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tasks_ibfk_1")
  other_tasks tasks?    @relation("tasksTotasks_parent")

  @@index([createdBy], map: "user-task_idx")
}

model users {
  id                     Int        @id @unique(map: "id_UNIQUE") @default(autoincrement()) @db.UnsignedInt
  username               String     @unique(map: "username_UNIQUE") @db.VarChar(125)
  email                  String     @unique(map: "email_UNIQUE") @db.VarChar(125)
  password               String     @db.VarChar(255)
  createdAt              DateTime   @default(now()) @db.DateTime(0)
  updatedAt              DateTime   @default(now()) @db.DateTime(0)
  isEmailVerified        Int        @default(0) @db.TinyInt
  emailVerificationToken String?    @db.VarChar(67)
  comments               comments[]
  tasks                  tasks[]
}
